{"version":3,"file":"static/js/547.0959d8cc.chunk.js","mappings":"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","sources":["components/Api/FetchApi.jsx","components/CastItem/CastItem.jsx","components/CastList/CastList.jsx","components/Cast/Cast.jsx","components/helpers/uniqueBy.jsx","components/helpers/urlGenerator.jsx"],"sourcesContent":["import axios from 'axios';\n//api.themoviedb.org/3/trending/movie/week?api_key=76cbb606f190fc237086ec33f1fd98a3&page=1 -----trand\n\n//api.themoviedb.org/3/search/movie?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US&query=cats&page=1&include_adult=false -----search\n\n//api.themoviedb.org/3/movie/550?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US -----details\n\n//api.themoviedb.org/3/movie/550/credits?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US -----cast\n\n//api.themoviedb.org/3/movie/550/reviews?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US -----reviews\n\nexport const API_KEY = '76cbb606f190fc237086ec33f1fd98a3';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrandingMovies = async (pageNumber = 1, options) => {\n  try {\n    const response = await axios.get(\n      `trending/all/day?api_key=${API_KEY}&page=${pageNumber}`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchMovies = async (searchQuery, pageNumber, options) => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${pageNumber}&include_adult=false`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async (filmId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async (filmId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/reviews?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCredits = async (filmId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/credits?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { urlGenerator } from 'components/helpers/urlGenerator';\nimport PropTypes from 'prop-types';\nexport const CastItem = ({\n  cast: { name, character, known_for_department, profile_path, popularity },\n}) => {\n  return (\n    <li>\n      <div>\n        <div>\n          <img src={urlGenerator(profile_path)} alt={name} />\n        </div>\n        <div>\n          <h3>{name}</h3>\n          <p>Character: {character || 'No name'}</p>\n          <p>Department: {known_for_department || '-'} </p>\n          <p>Popularity: {popularity.toFixed(1) || '-'}</p>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nCastItem.propTypes = {\n  cast: PropTypes.shape({\n    name: PropTypes.string,\n    character: PropTypes.string,\n    known_for_department: PropTypes.string,\n    profile_path: PropTypes.string,\n    popularity: PropTypes.number,\n  }),\n};\n","import { CastItem } from 'components/CastItem/CastItem';\nimport PropTypes from 'prop-types';\nexport const CastList = ({ casts }) => {\n  return (\n    <ul>\n      {casts.map(cast => (\n        <CastItem key={cast.id} cast={cast} />\n      ))}\n    </ul>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.shape({\n    name: PropTypes.string,\n    character: PropTypes.string,\n    known_for_department: PropTypes.string,\n    profile_path: PropTypes.string,\n    popularity: PropTypes.number,\n  }),\n};\n","import { useEffect, useState } from 'react';\nimport { fetchMovieCredits } from 'components/Api/FetchApi';\nimport { useParams } from 'react-router-dom';\nimport { CastList } from 'components/CastList/CastList';\nimport { Loader } from 'components/Loader/Loader';\nimport { uniqueBy } from 'components/helpers/uniqueBy';\n\nconst Cast = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieCast, setMovieCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovieCast = async id => {\n      try {\n        const data = await fetchMovieCredits(id);\n        setMovieCast(uniqueBy(data.cast, 'id'));\n        return data;\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovieCast(id);\n  }, [id]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      {<CastList casts={movieCast} />}\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Cast;\n","export const uniqueBy = (arr, prop) => {\n  const set = new Set();\n  return arr.filter(obj => !set.has(obj[prop]) && set.add(obj[prop]));\n};\n","export const urlGenerator = path => {\n  // if (path.startsWith('http')) {\n  //   return path;\n  // }\n  if (!path) {\n    return 'https://placeholder.pics/svg/300/7050FF-2716FF/FFFFFF/Not%20found';\n  }\n\n  return path.startsWith('/https')\n    ? path.slice(1)\n    : `https://image.tmdb.org/t/p/w500/${path}`;\n};\n"],"names":["API_KEY","axios","fetchTrandingMovies","pageNumber","options","response","data","console","log","fetchSearchMovies","searchQuery","fetchMovieDetails","filmId","fetchMovieReviews","fetchMovieCredits","CastItem","cast","name","character","known_for_department","profile_path","popularity","src","urlGenerator","alt","toFixed","CastList","casts","map","id","useState","isLoading","setIsLoading","movieCast","setMovieCast","useParams","useEffect","getMovieCast","uniqueBy","Loader","arr","prop","set","Set","filter","obj","has","add","path","startsWith","slice"],"sourceRoot":""}