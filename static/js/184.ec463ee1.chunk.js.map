{"version":3,"file":"static/js/184.ec463ee1.chunk.js","mappings":"mTAWaA,EAAU,mCAEvBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,2GAAOC,EAAP,+BAAoB,EAAGC,EAAvB,yCAERH,EAAAA,EAAAA,IAAA,mCACOD,EADP,iBACuBG,GAC5CC,GAJ6B,cAEzBC,EAFyB,yBAOxBA,EAASC,MAPe,gCAS/BC,QAAQC,IAAR,MAT+B,yDAAH,qDAanBC,EAAiB,mCAAG,WAAOC,EAAaP,EAAYC,GAAhC,gGAENH,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCU,EADnC,iBACuDP,EADvD,wBAErBC,GAJ2B,cAEvBC,EAFuB,yBAOtBA,EAASC,MAPa,gCAS7BC,QAAQC,IAAR,MAT6B,yDAAH,0DAajBG,EAAiB,mCAAG,WAAOC,EAAQR,GAAf,gGAENH,EAAAA,EAAAA,IAAA,gBACZW,EADY,4DAErBR,GAJ2B,cAEvBC,EAFuB,yBAOtBA,EAASC,MAPa,gCAS7BC,QAAQC,IAAR,MAT6B,yDAAH,wDAajBK,EAAiB,mCAAG,WAAOD,EAAQR,GAAf,gGAENH,EAAAA,EAAAA,IAAA,gBACZW,EADY,oEAErBR,GAJ2B,cAEvBC,EAFuB,yBAOtBA,EAASC,MAPa,gCAS7BC,QAAQC,IAAR,MAT6B,yDAAH,wDAajBM,EAAiB,mCAAG,WAAOF,EAAQR,GAAf,gGAENH,EAAAA,EAAAA,IAAA,gBACZW,EADY,oEAErBR,GAJ2B,cAEvBC,EAFuB,yBAOtBA,EAASC,MAPa,gCAS7BC,QAAQC,IAAR,MAT6B,yDAAH,uD,yKClEjBO,EAAa,SAAC,GAMpB,IAAD,IALJC,OACEC,EAIE,EAJFA,OACkBC,EAGhB,EAHFC,eAAkBD,YAClBE,EAEE,EAFFA,QAKF,OAFAb,QAAQC,IAAI,cAAeU,IAGzB,2BACE,gBAAKG,KAAKC,EAAAA,EAAAA,GAAaJ,GAAcK,IAAKN,KAC1C,wBAAKA,KACL,uBAAIG,MAGT,EChBYI,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,wBACGA,EAAQC,KAAI,SAAAV,GAAM,OACjB,SAACD,EAAD,CAA4BC,OAAQA,GAAnBA,EAAOW,GADP,KAKxB,EC8BD,EAjCgB,WACd,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACQL,GAAOM,EAAAA,EAAAA,MAAPN,GAoBR,OAnBAO,EAAAA,EAAAA,YAAU,WACRJ,GAAa,GACb,IAAMK,EAAc,mCAAG,WAAMR,GAAN,iGAEAd,EAAAA,EAAAA,IAAkBc,GAFlB,cAEbrB,EAFa,OAGnB0B,EAAe1B,EAAK8B,SACpB7B,QAAQC,IAAI,cAAeF,EAAK8B,SAJb,kBAMZ9B,GANY,gCAQnBC,QAAQC,IAAR,MARmB,yBAUnBsB,GAAa,GAVM,4EAAH,sDAcpBK,EAAeR,EAChB,GAAE,CAACA,KAGF,4BACE,oCACA,SAACH,EAAD,CAAaC,QAASM,IACrBF,IAAa,SAACQ,EAAA,EAAD,MACXN,EAAYO,SAAU,yCAG9B,C,uDCrCM,IAAMhB,EAAe,SAAAiB,GAI1B,OAAKA,EAIEA,EAAKC,WAAW,UACnBD,EAAKE,MAAM,GADR,0CAEgCF,GAL9B,mEAMV,C","sources":["components/Api/FetchApi.jsx","components/ReviewsItem/ReviewsItem.jsx","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx","components/helpers/urlGenerator.jsx"],"sourcesContent":["import axios from 'axios';\n//api.themoviedb.org/3/trending/movie/week?api_key=76cbb606f190fc237086ec33f1fd98a3&page=1 -----trand\n\n//api.themoviedb.org/3/search/movie?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US&query=cats&page=1&include_adult=false -----search\n\n//api.themoviedb.org/3/movie/550?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US -----details\n\n//api.themoviedb.org/3/movie/550/credits?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US -----cast\n\n//api.themoviedb.org/3/movie/550/reviews?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US -----reviews\n\nexport const API_KEY = '76cbb606f190fc237086ec33f1fd98a3';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrandingMovies = async (pageNumber = 1, options) => {\n  try {\n    const response = await axios.get(\n      `trending/all/day?api_key=${API_KEY}&page=${pageNumber}`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchMovies = async (searchQuery, pageNumber, options) => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${pageNumber}&include_adult=false`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async (filmId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async (filmId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/reviews?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCredits = async (filmId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/credits?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { urlGenerator } from 'components/helpers/urlGenerator';\nexport const ReviewItem = ({\n  review: {\n    author,\n    author_details: { avatar_path },\n    content,\n  },\n}) => {\n  console.log('avatar_path', avatar_path);\n\n  return (\n    <li>\n      <img src={urlGenerator(avatar_path)} alt={author} />\n      <h3>{author}</h3>\n      <p>{content}</p>\n    </li>\n  );\n};\n","import { ReviewItem } from 'components/ReviewsItem/ReviewsItem';\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(review => (\n        <ReviewItem key={review.id} review={review} />\n      ))}\n    </ul>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchMovieReviews } from 'components/Api/FetchApi';\nimport { ReviewsList } from 'components/ReviewsList/ReviewsList';\n\nconst Reviews = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieReview, setMovieReview] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovieReview = async id => {\n      try {\n        const data = await fetchMovieReviews(id);\n        setMovieReview(data.results);\n        console.log('data review', data.results);\n\n        return data;\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovieReview(id);\n  }, [id]);\n\n  return (\n    <div>\n      <h2>Review</h2>\n      <ReviewsList reviews={movieReview} />\n      {isLoading && <Loader />}\n      {!!movieReview.length || <div>Not found</div>}\n    </div>\n  );\n};\n\nexport default Reviews;\n","export const urlGenerator = path => {\n  // if (path.startsWith('http')) {\n  //   return path;\n  // }\n  if (!path) {\n    return 'https://placeholder.pics/svg/300/7050FF-2716FF/FFFFFF/Not%20found';\n  }\n\n  return path.startsWith('/https')\n    ? path.slice(1)\n    : `https://image.tmdb.org/t/p/w500/${path}`;\n};\n"],"names":["API_KEY","axios","fetchTrandingMovies","pageNumber","options","response","data","console","log","fetchSearchMovies","searchQuery","fetchMovieDetails","filmId","fetchMovieReviews","fetchMovieCredits","ReviewItem","review","author","avatar_path","author_details","content","src","urlGenerator","alt","ReviewsList","reviews","map","id","useState","isLoading","setIsLoading","movieReview","setMovieReview","useParams","useEffect","getMovieReview","results","Loader","length","path","startsWith","slice"],"sourceRoot":""}