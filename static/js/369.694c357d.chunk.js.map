{"version":3,"file":"static/js/369.694c357d.chunk.js","mappings":"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","sources":["components/Api/FetchApi.jsx","components/CastItem/CastItem.styled.jsx","components/CastItem/CastItem.jsx","components/CastList/CastList.styled.jsx","components/CastList/CastList.jsx","components/Cast/Cast.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/helpers/uniqueBy.jsx","components/helpers/urlGenerator.jsx"],"sourcesContent":["import axios from 'axios';\n\n//api.themoviedb.org/3/trending/movie/week?api_key=76cbb606f190fc237086ec33f1fd98a3&page=1 -----trand\n\n//api.themoviedb.org/3/search/movie?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US&query=cats&page=1&include_adult=false -----search\n\n//api.themoviedb.org/3/movie/550?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US -----details\n\n//api.themoviedb.org/3/movie/550/credits?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US -----cast\n\n//api.themoviedb.org/3/movie/550/reviews?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US -----reviews\n\nexport const API_KEY = '76cbb606f190fc237086ec33f1fd98a3';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrandingMovies = async (pageNumber = 1, options) => {\n  try {\n    const response = await axios.get(\n      `trending/all/day?api_key=${API_KEY}&page=${pageNumber}`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchMovies = async (searchQuery, pageNumber, options) => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${pageNumber}&include_adult=false`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async (filmId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async (filmId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/reviews?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCredits = async (filmId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/credits?api_key=76cbb606f190fc237086ec33f1fd98a3&language=en-US`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const CastStyledItem = styled.li`\n  border-radius: 6px;\n  flex-basis: calc((100% - 40px) / 5);\n  overflow: hidden;\n  box-shadow: rgb(46 43 194) 2px 6px 8px, rgb(29 6 235);\n`;\n\nexport const CastImg = styled.img`\n  width: 100%;\n  object-fit: cover;\n  height: 240px;\n`;\n\nexport const CastContentWrp = styled.div`\n  background-color: #666666;\n  color: #070707;\n  padding: 14px;\n  height: 200px;\n`;\n\nexport const CastActor = styled.h3`\n  text-align: center;\n  height: 48px;\n`;\n\nexport const CastCharacter = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  &:nth-of-type(1) {\n    height: 82px;\n  }\n`;\n\nexport const CastDescrSpan = styled.span`\n  color: #d0ff00;\n`;\n","import { urlGenerator } from 'components/helpers/urlGenerator';\nimport {\n  CastStyledItem,\n  CastImg,\n  CastContentWrp,\n  CastActor,\n  CastCharacter,\n  CastDescrSpan,\n} from './CastItem.styled';\n\nimport PropTypes from 'prop-types';\nexport const CastItem = ({\n  cast: { name, character, known_for_department, profile_path, popularity },\n}) => {\n  return (\n    <CastStyledItem>\n      <CastImg src={urlGenerator(profile_path)} alt={name} />\n\n      <CastContentWrp>\n        <CastActor>{name}</CastActor>\n        <CastCharacter>\n          Character: <CastDescrSpan>{character || 'No name'}</CastDescrSpan>\n        </CastCharacter>\n        <CastCharacter>\n          Department:{' '}\n          <CastDescrSpan>{known_for_department || '-'}</CastDescrSpan>\n        </CastCharacter>\n        <CastCharacter>\n          Popularity:{' '}\n          <CastDescrSpan>{popularity.toFixed(1) || '-'}</CastDescrSpan>\n        </CastCharacter>\n      </CastContentWrp>\n    </CastStyledItem>\n  );\n};\n\nCastItem.propTypes = {\n  cast: PropTypes.shape({\n    name: PropTypes.string,\n    character: PropTypes.string,\n    known_for_department: PropTypes.string,\n    profile_path: PropTypes.string,\n    popularity: PropTypes.number,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const CastStyledList = styled.ul`\n  padding: 20px 0;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 10px;\n`;\n","import { CastItem } from 'components/CastItem/CastItem';\nimport { CastStyledList } from './CastList.styled';\nimport PropTypes from 'prop-types';\nexport const CastList = ({ casts }) => {\n  return (\n    <CastStyledList>\n      {casts.map(cast => (\n        <CastItem key={cast.id} cast={cast} />\n      ))}\n    </CastStyledList>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      character: PropTypes.string,\n      known_for_department: PropTypes.string,\n      profile_path: PropTypes.string,\n      popularity: PropTypes.number,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\nimport { fetchMovieCredits } from 'components/Api/FetchApi';\nimport { useParams } from 'react-router-dom';\nimport { CastList } from 'components/CastList/CastList';\nimport { Loader } from 'components/Loader/Loader';\nimport { uniqueBy } from 'components/helpers/uniqueBy';\nimport { Section } from 'components/Section/Section';\n\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieCast, setMovieCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    setIsLoading(true);\n    const getMovieCast = async id => {\n      try {\n        const data = await fetchMovieCredits(id, {\n          signal: controller.signal,\n        });\n        setMovieCast(uniqueBy(data.cast, 'id'));\n        return data;\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovieCast(id);\n    return () => controller.abort();\n  }, [id]);\n\n  return (\n    <Section title={'Cast'}>\n      {<CastList casts={movieCast} />}\n      {isLoading && <Loader />}\n    </Section>\n  );\n};\n\nCast.propTypes = {\n  isLoading: PropTypes.bool,\n  movieCast: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      character: PropTypes.string,\n      known_for_department: PropTypes.string,\n      profile_path: PropTypes.string,\n      popularity: PropTypes.number,\n    })\n  ),\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const SectionWrp = styled.section`\n  padding: 40px 0;\n`;\n\nexport const SectionTitle = styled.h1`\n  font-size: 30px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionWrp, SectionTitle } from './Section.styled';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionWrp>\n      <Container>\n        <SectionTitle>{title}</SectionTitle>\n        {children}\n      </Container>\n    </SectionWrp>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n","export const uniqueBy = (arr, prop) => {\n  const set = new Set();\n  return arr.filter(obj => !set.has(obj[prop]) && set.add(obj[prop]));\n};\n","export const urlGenerator = path => {\n  // if (path.startsWith('http')) {\n  //   return path;\n  // }\n  if (!path) {\n    return 'https://placeholder.pics/svg/300/7050FF-2716FF/FFFFFF/Not%20found';\n  }\n\n  return path.startsWith('/https')\n    ? path.slice(1)\n    : `https://image.tmdb.org/t/p/w500/${path}`;\n};\n"],"names":["API_KEY","axios","fetchTrandingMovies","pageNumber","options","response","data","console","log","fetchSearchMovies","searchQuery","fetchMovieDetails","filmId","fetchMovieReviews","fetchMovieCredits","CastStyledItem","styled","CastImg","CastContentWrp","CastActor","CastCharacter","CastDescrSpan","CastItem","cast","name","character","known_for_department","profile_path","popularity","src","urlGenerator","alt","toFixed","CastStyledList","CastList","casts","map","id","useState","isLoading","setIsLoading","movieCast","setMovieCast","useParams","useEffect","controller","AbortController","getMovieCast","signal","uniqueBy","abort","Section","title","Loader","SectionWrp","SectionTitle","children","arr","prop","set","Set","filter","obj","has","add","path","startsWith","slice"],"sourceRoot":""}